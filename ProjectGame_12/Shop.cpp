#include "Shop.h"
#include <iostream>
#include <vector>
#include <string>

using namespace std;

Shop::Shop()
{
    Itemlist.push_back({ "HP 100 증가 물약",10, EItemType::HealAmount }); // 상점에서 판매 리스트
    Itemlist.push_back({ "HP 50% 증가 물약",20, EItemType::HealRatio });
    Itemlist.push_back({ "공격력 증가 물약",80, EItemType::EWeapon });
    Itemlist.push_back({ "최대체력 증가 물약",80, EItemType::EArmor });
}

void Shop::buyItem(Player* player)
{
    int index; // 템 번호

    while (true) // 템 사거나 잘못된 번호 입력하면 끝나서 while문 사용
    {
        // 맨 위에 플레이어 골드 출력 (항상 한 줄만)
        cout << "\n플레이어 현재 골드: " << Gold::getinstance().getAmount() << " Gold" << endl;

        // 상점 목록 출력
        cout << "===== 탑의 상점 =====" << endl;
        for (int i = 0; i < (int)Itemlist.size(); ++i) // 상점창에서 판매목록 1번부터해서 상점창 출력
        {
            cout << i + 1 << ". " << Itemlist[i].name
                << " - " << Itemlist[i].price << " Gold" << endl; // 1. 템 - 가격 골드
        }
        cout << "0. 상점 나가기" << endl;
        cout << "==================" << endl;

        cout << "구매할 번호를 입력하세요.: ";
        cin >> index;

        if (index == 0)
        {
            cout << "상점을 나갑니다." << endl;
            break;
        }

        if (index < 1 || index >(int)Itemlist.size())
        {
            cout << "잘못된 입력값입니다." << endl;
            continue;
        }

        ShopItem selectItem = Itemlist[index - 1]; // 0부터 시작하니까 -1 해줘서 1부터 시작하게 해줌

        if (Gold::getinstance().spend(selectItem.price))
        {
            cout << selectItem.name << "을 구매하였습니다." << endl;

            
            auto item = player->getBag()->getItem(selectItem.type);
            if (item)
            {
                item->addCount(1);
            }
            
           

        }
    }

    // 반복문이 돌아가면 맨 위 골드가 갱신되면서 상점 화면 다시 출력
}

